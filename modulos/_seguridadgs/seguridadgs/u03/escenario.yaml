heat_template_version: newton

description: 1 router, 1 dmz, 1 lan

parameters:
  flavor:
    type: string
    default: "m1.mini"
  image:
    type: string
    default: "bf688ff8-549e-4de6-8e96-13b10e85f1fe"
  red_externa:
    type: string
    description: red para conectarse a internet
    constraints:
      - custom_constraint: neutron.network

  key_name:
    type: string
    description: SSH key pair
    constraints:
      - custom_constraint: nova.keypair
  
resources:

  red1:
    type: OS::Neutron::Net
    properties:
      name: "Red 1"
  red2:
    type: OS::Neutron::Net
    properties:
      name: "Red 2"

  subnet1:
    type: OS::Neutron::Subnet
    properties:
      network: { get_resource: red1 }
      cidr: 10.0.100.0/24
  subnet2:
    type: OS::Neutron::Subnet
    properties:
      network: { get_resource: red2 }
      cidr: 10.0.110.0/24

  pc1_red1:
    type: OS::Neutron::Port
    properties:
      network: { get_resource: red1 }
      port_security_enabled: False
      security_groups: []
  r1_red1:
    type: OS::Neutron::Port
    properties:
      network: { get_resource: red1 }
      port_security_enabled: False
      security_groups: []
      
  r1_red2:
    type: OS::Neutron::Port
    properties:
      network: { get_resource: red2 }
      port_security_enabled: False
      security_groups: []
      
  r1_network_ext:
    type: OS::Neutron::Port
    properties:
      network: {get_param: red_externa}
      
      

  pc2_red2:
    type: OS::Neutron::Port
    properties:
      network: { get_resource: red2 }

  pc1:
    type: OS::Nova::Server
    properties:
      name: "PC 1"
      flavor: { get_param: flavor }
      image: { get_param: image }
      key_name: { get_param: key_name }
      networks:
        - { port: { get_resource: pc1_red1 } }
        
  r1:
    type: OS::Nova::Server
    properties:
      name: "Router 1"
      flavor: { get_param: flavor }
      image: { get_param: image }
      key_name: { get_param: key_name }
      networks:
        - { port: { get_resource: r1_red1 } }
        - { port: { get_resource: r1_red2 } }
        - { port: { get_resource: r1_network_ext } }

  pc2:
    type: OS::Nova::Server
    properties:
      name: "PC 2"
      flavor: { get_param: flavor }
      image: { get_param: image }
      key_name: { get_param: key_name }
      networks:
        - { port: { get_resource: pc2_red2 } }
  
  r1_ip:
    type: OS::Neutron::FloatingIP
    properties:
      floating_network: ext-net
      port_id: { get_resource: r1_network_ext  }

outputs:
  mac_r1_red1:
    description: "Router 1 - Red 1"
    value: { get_attr: [r1_red1, mac_address] } 
  mac_r1_red2:
    description: "Router 1 - Red 2"
    value: { get_attr: [r1_red2, mac_address] } 
